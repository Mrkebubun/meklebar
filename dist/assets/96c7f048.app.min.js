define("meklebar/app",["resolver","meklebar/utils/register_components","meklebar/helpers/bitcoin"],function(a,b){"use strict";var c=Ember.Application.extend({LOG_ACTIVE_GENERATION:!0,LOG_MODULE_RESOLVER:!0,LOG_TRANSITIONS:!0,LOG_TRANSITIONS_INTERNAL:!0,LOG_VIEW_LOOKUPS:!0,modulePrefix:"meklebar",Resolver:a});return c.initializer({name:"Register Components",initialize:function(a){b(a)}}),c}),define("meklebar/components/make_inner",[],function(){"use strict";var a=function(a,b){var c=a.create(),d=c.attributeBindings,e={};return d.concat(b).forEach(function(a){"type"!==a&&(e[a]=Ember.computed.alias("parentView."+a))}),a.extend(e)};return a}),define("meklebar/components/modal-dialog",[],function(){"use strict";var a=Ember.Component.extend({actions:{close:function(){this.container.lookup("route:application").send("closeModal")}}});return a}),define("meklebar/components/number-input",[],function(){"use strict";var a=Ember.TextField.extend({type:"number",attributeBindings:["min","max","step"]});return a}),define("meklebar/components/validated-input-inner",["meklebar/components/make_inner"],function(a){"use strict";var b=a(Ember.TextField);return b}),define("meklebar/components/validated-input",[],function(){"use strict";var a=Ember.Component.extend({classNameBindings:["hasError",":form-group"],label:null,value:null,valid:null,focusedIn:!1,focusedOut:!1,comp:"","input-cols":"7",inputColClass:function(){return"col-lg-"+this.get("input-cols")}.property("input-cols"),compView:function(){var a,b=this.get("comp");return a=Ember.isEmpty(b)?"validated-input-inner":"validated-"+b+"-input-inner",App.__container__.lookup("component:"+a)}.property("comp"),invalid:Ember.computed.not("valid"),focusedInvalid:Ember.computed.and("focusedIn","invalid"),hasError:Ember.computed.and("focusedOut","invalid"),focusIn:function(){this.set("focusedIn",!0)},focusOut:function(){this.set("focusedOut",!0)}});return a}),define("meklebar/components/validated-number-input-inner",["meklebar/components/make_inner","meklebar/components/number-input"],function(a,b){"use strict";var c=a(b);return c}),define("meklebar/components/validated-textarea-input-inner",["meklebar/components/make_inner"],function(a){"use strict";var b=a(Ember.TextArea,["value"]);return b}),define("meklebar/components/validation-glyphicon",[],function(){"use strict";var a=Ember.Component.extend({tagName:"span",condition:null,classNameBindings:["condition:glyphicon-ok:glyphicon-remove",":glyphicon"]});return a}),define("meklebar/controllers/approve",[],function(){"use strict";var a=Ember.ObjectController.extend({actions:{sign:function(){this.get("signature.valid")&&this.set("showSignature",!0)},reset:function(){this.setProperties({code:null,showSignature:!1})}},code:"",codeData:function(){var a=this.get("code");if(!Ember.isEmpty(a)){var b=atob(a.trim()).split(":");if(2===b.length&&64===b[0].length)return{txHash:b[0],redeemAddr:b[1]}}}.property("code"),codeValid:Ember.computed.notEmpty("codeData"),hasDetails:Ember.computed.and("amount","address"),codeDataChnaged:function(){var a=this.get("codeData")||{};this.set("inputHash",a.txHash),this.set("address",a.redeemAddr)}.observes("codeData"),signature:function(){return this.get("model").createSignature()}.property("hashForSignature","bytePubKeys"),blockchainUrl:function(){var a=this.get("inputHash");if(!Ember.isEmpty(a))return"http://blockchain.info/tx/"+a}.property("inputHash")});return a}),define("meklebar/controllers/redeem",[],function(){"use strict";var a=Ember.ObjectController.extend({actions:{redeem:function(){if(this.get("model.validRequest")&&confirm("Are you sure?")){var a=this;this.set("error",null),this.set("sendingTx",!0),this.get("model").sendTx().then(function(){a.set("sendingTx",!1),a.set("pushSuccess",!0)},function(b){a.set("sendingTx",!1),a.set("error",b.resp+" ("+b.code+")")})}},reset:function(){this.set("pushSuccess",null),this.setProperties({inputHash:"",address:""})}},pushSuccess:null,error:null,sendingTx:null,invalidRequest:Ember.computed.not("validRequest"),redeemDisabled:Ember.computed.or("invalidRequest","sendingTx")});return a}),define("meklebar/controllers/send",[],function(){"use strict";var a=Ember.ObjectController.extend({actions:{sendTx:function(){if(this.get("model.validTx")&&confirm("Are you sure?")){var a=this;this.set("error",null),this.set("sendingTx",!0),this.get("model").sendTx().then(function(){a.set("sendingTx",!1),a.set("pushSuccess",!0)},function(b){a.set("sendingTx",!1),a.set("error",b)})}},reset:function(){this.set("pushSuccess",null),this.set("model.amountBTC","0.0"),this.set("model.source.priv",""),this.set("model.receiver.pubKeyOrAddress",""),this.set("model.mediator.pubKeyOrAddress","")}},pushSuccess:null,error:null,sendingTx:null,invalidTx:Ember.computed.not("validTx"),sendDisabled:Ember.computed.or("invalidTx","sendingTx")});return a}),define("meklebar/helpers/bitcoin",[],function(){"use strict";Ember.Handlebars.helper("btcValue",function(a){return"string"!=typeof a&&(a=""+a),Bitcoin.Util.formatValue(a)})}),define("meklebar/models/address",["meklebar/models/bitcoin_service"],function(a){"use strict";var b=Ember.Object.extend({priv:null,privValidLength:Ember.computed.equal("priv.length",51),privValid:Ember.computed.alias("privValidLength"),validSender:Ember.computed.alias("privValid"),validParty:Ember.computed.and("address","pubkey"),addrValid:Ember.computed.equal("address.length",34),eckey:function(){return this.get("privValid")?new Bitcoin.ECKey(this.get("priv")):void 0}.property("priv"),address:function(){return this.get("privValid")?this.get("eckey").getBitcoinAddress().toString():void 0}.property("privValid","eckey"),addr:function(){return new Bitcoin.Address(this.get("address"))}.property("address"),unspent:null,balance:function(){var a=this.get("unspent");return a?a.reduce(function(a,b){return a+b.value},0):0}.property("unspent.@each.value"),balanceBTC:function(){return Bitcoin.Util.formatValue(this.get("balance"))}.property("balance"),pubkey:function(a,b){if(1===arguments.length){if(this._pubkey)return this._pubkey;var c=this.get("privValid"),d=this.get("eckey");if(!c||!d)return;return this._pubkey=Crypto.util.bytesToHex(d.getPub()),this._pubkey}return this._pubkey=b,b&&b.length>0&&this.set("address",Bitcoin.Address.fromPubKey(b).toString()),b}.property("privValid","eckey"),pubKeyOrAddress:function(a,b){return 1===arguments.length?this._pkad:(34===b.length?this.set("address",b):130===b.length?this.set("pubkey",b):(this.set("address",""),this.set("pubkey","")),this._pkad=b)}.property(),pkoaAddress:Ember.computed.equal("pubKeyOrAddress.length",34),pkoaPubKey:Ember.computed.equal("pubKeyOrAddress.length",130),noAddrNoPub:Ember.computed.not("validParty"),noPub:Ember.computed.empty("pubkey"),addrNoPub:Ember.computed.and("address","noPub"),getUnspent:function(){var b=this.get("address"),c=this;return this.get("addrValid")&&this.get("privValid")?(a.unspentInputsForAddress(b).then(function(a){c.set("unspent",a)}),void 0):this.set("unspent",[])}.on("init").observes("address"),getPubkey:function(){var b=this.get("address"),c=this;this.get("addrValid")&&!this._pubkey&&a.pubKeyForAddress(b).then(function(a){c.set("pubkey",a)})}.observes("address")});return b}),define("meklebar/models/bitcoin_service",[],function(){"use strict";var a=Ember.Object.extend();return a.reopenClass({pubKeyForAddress:function(a){var b="https://blockchain.info/q/pubkeyaddr/"+a+"?cors=true";return $.ajax(b).then(function(a){return 130===a.length?a:void 0},function(a){return a.responseText})},unspentInputsForAddress:function(a){return new Ember.RSVP.Promise(function(b,c){var d="https://blockchain.info/unspent?cors=true&address="+a;$.ajax(d).then(function(a){b(a.unspent_outputs||[])},function(a){"No free outputs to spend"===a.responseText?b([]):c(a.responseText)})})},pushTx:function(a){var b="https://blockchain.info/pushtx?cors=true";return $.ajax(b,{type:"POST",data:{tx:a}}).then(void 0,function(a){return a.responseText})},pushMultisigTx:function(a){return new Ember.RSVP.Promise(function(b,c){var d="https://coinb.in/api/",e="1",f="12345678901234567890123456789012",g="uid="+e+"&key="+f+"&setmodule=bitcoin&request=sendrawtransaction&rawtx="+a;return $.ajax(d+"?"+g).then(function(a){var d=a.getElementsByTagName("result")[0].childNodes[0].nodeValue;d=parseInt(d,10);var e=a.getElementsByTagName("response")[0].childNodes[0].nodeValue;e=decodeURIComponent(e).replace(/\+/g," "),0===d&&"unexpected error, try again in a moment"===e?b():c({code:d,resp:e})})})},txFromHash:function(a){return new Ember.RSVP.Promise(function(b){var c="http://www.corsproxy.com/blockexplorer.com/rawtx/"+a;$.get(c,function(a){b(JSON.parse(a))})})},blockchainTxUrl:function(a){return"https://blockchain.info/tx/"+a}}),a}),define("meklebar/models/coin_selector",["exports"],function(a){"use strict";var b=function(a,b){b.sort(function(a,b){return b.confirmations-a.confirmations});var c=[],d=0;return b.forEach(function(b){console.log("processing",b),d>=a||(c.push(b),d+=b.value)}),[c,d-a]};a.simpleCoinSelector=b}),define("meklebar/models/escrow_out",[],function(){"use strict";var a=Ember.Object.extend({data:null,amount:Ember.computed.alias("data.value"),scriptTokens:function(){var a=this.get("data");return a.scriptPubKey.split(" ")}.property("data.scriptPubKey"),signaturesNeeded:function(){var a=this.get("scriptTokens");return parseInt(a[0],10)}.property("scriptTokens"),signers:function(){var a=this.get("scriptTokens");return a.slice(1,a.length-2)}.property("scriptTokens"),numSigners:Ember.computed.alias("signers.length"),txIn:function(){var a=this.get("data");return Bitcoin.TransactionIn.fromJSON({tx_hash:a.hash,tx_output_n:a.index,script:a.scriptPubKey},!0)}.property("data.hash","data.index","data.scriptPubKey")});return a}),define("meklebar/models/escrow_transaction",["meklebar/models/coin_selector","meklebar/models/bitcoin_service"],function(a,b){"use strict";var c=a.simpleCoinSelector,d=Ember.Object.extend({source:null,mediator:null,receiver:null,amountBTC:"0.0",eckey:Ember.computed.alias("source.eckey"),amount:function(){return Bitcoin.Util.parseValue(this.get("amountBTC"))}.property("amountBTC"),fee:function(){return Bitcoin.Util.parseValue("0.0005")}.property("feeBTC"),interAmount:function(){return this.get("amount").add(this.get("fee"))}.property("amount","fee"),totalAmount:function(){return this.get("interAmount").add(this.get("fee"))}.property("interAmount","fee"),enoughMoney:function(){var a=this.get("totalAmount").intValue(),b=this.get("source.balance");return b>=a}.property("totalAmount","source.balance"),moreThanMin:function(){var a=this.get("totalAmount").intValue();return a>1e6}.property("totalAmount"),validAmount:Ember.computed.and("moreThanMin","enoughMoney"),inputs:function(){var a=this.get("totalAmount").intValue(),b=this.get("source.unspent").slice(0);return c(a,b)}.property("totalAmount","source.unspent.@each"),inputTxs:function(){var a=this.get("inputs"),b=a[0];return b.map(function(a){return Bitcoin.TransactionIn.fromJSON(a,!1,!0)})}.property("inputs.@each"),txAmountBytes:function(){return Bitcoin.Util.amountToBytes(this.get("interAmount"))}.property("interAmount"),escrowTx:function(){var a=this.get("txAmountBytes"),b=this,c=["source","mediator","receiver"].map(function(a){return Crypto.util.hexToBytes(b.get(a).get("pubkey"))});return new Bitcoin.TransactionOut({value:a,script:Bitcoin.Script.createMultiSigOutputScript(2,c)})}.property("txAmountBytes","source.pubkey","mediator.pubkey","receiver.pubkey"),changeAmountBytes:function(){return Bitcoin.Util.amountToBytes(this.get("inputs")[1])}.property("inputs.@each"),changeTx:function(){var a=this.get("inputs")[1];if(!(0>=a)){var b=this.get("changeAmountBytes"),c=this.get("source.addr");return new Bitcoin.TransactionOut({value:b,script:Bitcoin.Script.createOutputScript(c)})}}.property("inputs.@each","changeAmountBytes","source.addr"),tx:function(){this.get("inputs")[1];var a=new Bitcoin.Transaction,b=this.get("eckey");a.addInputs(this.get("inputTxs"));var c=this.get("escrowTx");a.addOutput(c);var d=this.get("changeTx");return d&&a.addOutput(d),a.ins.forEach(function(c,d){c.simpleSignScript(b,a,d)}),a}.property("eckey","inputs.@each","inputTxs.@each","escrowTx","changeTx"),validTx:Ember.computed.and("validAmount","source.validSender","mediator.validParty","receiver.validParty"),hash:function(){if(this.get("validTx")){var a=this.get("tx");return Crypto.util.bytesToHex(a.getHash().reverse())}}.property("tx","validTx"),blockchainUrl:function(){var a=this.get("hash");if(a)return b.blockchainTxUrl(a)}.property("hash"),bbe:function(){var a=this.get("tx");if(a){var b=a.toJSON();return JSON.stringify(b,null,2)}}.property("tx"),hex:function(){var a=this.get("tx");if(a)return a.hex()}.property("tx"),sendTx:function(){return b.pushTx(this.get("hex"))}});return d}),define("meklebar/models/redemption_input",["meklebar/models/escrow_out"],function(a){"use strict";var b=Ember.Object.extend({data:null,hash:Ember.computed.alias("data.hash"),escrowOut:function(){var b=this.get("data");if(b){var c=b.out.find(function(a){return a.scriptPubKey.match("OP_CHECKMULTISIG")}),d=JSON.parse(JSON.stringify(c));return d.index=b.out.indexOf(c),d.hash=b.hash,a.create({data:d})}}.property("data.out.@")});return b}),define("meklebar/models/redemption_tx",["meklebar/models/bitcoin_service","meklebar/models/escrow_out","meklebar/models/redemption_input","meklebar/models/signature"],function(a,b,c,d){"use strict";var e=Ember.Object.extend({inputHash:null,input:null,address:null,validAddress:Ember.computed.equal("address.length",34),validTx:Ember.computed.notEmpty("input.escrowOut"),validRequest:Ember.computed.and("validTx","validAddress","allSigned"),amount:Ember.computed.alias("input.escrowOut.amount"),txIn:Ember.computed.alias("input.escrowOut.txIn"),signaturesNeeded:Ember.computed.alias("input.escrowOut.signaturesNeeded"),signers:Ember.computed.alias("input.escrowOut.signers"),signerAddresses:function(){var a=this.get("signers");if(a)return a.map(function(a){return Bitcoin.Address.fromPubKey(a).toString()})}.property("signers.@"),receiverRole:function(){var a=this.get("address"),b=this.get("signerAddresses");if(!Ember.isEmpty(a)&&b){var c;switch(a){case b[0]:c="buyer";break;case b[1]:c="mediator";break;case b[b.length-1]:c="merchant"}return c}}.property("address","signerAddresses"),receiverBuyer:Ember.computed.equal("receiverRole","buyer"),receiverMediator:Ember.computed.equal("receiverRole","mediator"),receiverMerchant:Ember.computed.equal("receiverRole","merchant"),fee:function(){return"0.0005"}.property(),amountWithoutFee:function(){var a=this.get("amount"),b=this.get("fee");return a?(a=Bitcoin.Util.parseValue(a),b=Bitcoin.Util.parseValue(b),a.subtract(b).intValue()):0}.property("amount","fee"),bytePubKeys:function(){var a=this.get("signers");if(a)return a.map(function(a){return Crypto.util.hexToBytes(a)})}.property("signers"),createSignature:function(a){var b=this.get("hashForSignature"),c=this.get("bytePubKeys");return c&&b?d.create({hash:Crypto.util.hexToBytes(b),publicKeys:c,number:a}):void 0},signatures:function(){var a=this.get("signaturesNeeded"),b=this.get("hashForSignature"),c=this.get("bytePubKeys"),d=this;if(c&&b){var e=a?new Array(a).join(",").split(","):[];return e.map(function(a,b){return d.createSignature(b+1)})}}.property("signaturesNeeded","hashForSignature","bytePubKeys"),moreThanOneSig:Ember.computed.gt("signatures.length",1),numSignedPubKeys:function(){var a=this.get("signatures");if(a){var b=a.map(function(a){return a.get("validPublic")});return b.compact().uniq().length}}.property("signatures.@each.validPublic"),allSigned:function(){var a=this.get("numSignedPubKeys"),b=this.get("signaturesNeeded");return a===b}.property("numSignedPubKeys","signaturesNeeded"),txOut:function(){var a=this.get("address"),b=this.get("amountWithoutFee");if(!Ember.isEmpty(a)&&b){var c=Bitcoin.Util.amountToBytes(b),d=new Bitcoin.Address(a);return new Bitcoin.TransactionOut({value:c,script:Bitcoin.Script.createOutputScript(d)})}}.property("address","amountWithoutFee"),basicTx:function(){var a=this.get("txIn"),b=this.get("txOut");if(a&&b){var c=new Bitcoin.Transaction;return c.addInput(a),c.addOutput(b),c}}.property("txIn","txOut"),finalTx:function(){var a=this.get("basicTx");if(a){a=a.clone();var b=this.get("signatures").map(function(a){return a.get("signature")});return a.ins[0].multiSignScript(b,a,0),a}}.property("basicTx","signatures.@each"),hashForSignature:function(){var a=this.get("basicTx");if(a){var b=a.hashTransactionForSignature(a.ins[0].script,0,1);return Crypto.util.bytesToHex(b)}}.property("basicTx"),requestCode:function(){var a=this.get("input.hash"),b=this.get("address");if(a&&this.get("validAddress")){var c=[a,b].join(":");return btoa(c)}}.property("input.hash","address"),bbe:function(){var a=this.get("finalTx");if(a){var b=a.toJSON();return JSON.stringify(b,null,2)}}.property("finalTx"),hex:function(){var a=this.get("finalTx");if(a)return a.hex()}.property("finalTx"),hash:function(){if(this.get("validRequest")){var a=this.get("finalTx");return Crypto.util.bytesToHex(a.getHash().reverse())}}.property("finalTx","validTx"),blockchainUrl:function(){var b=this.get("hash");if(b)return a.blockchainTxUrl(b)}.property("hash"),fetchInput:function(){var b=this.get("inputHash"),d=this;return Ember.isEmpty(b)||64!==b.length?this.set("input",null):(a.txFromHash(b).then(function(a){d.set("input",c.create({data:a}))},function(){d.set("input",null),console.error(arguments)}),void 0)}.observes("inputHash"),sendTx:function(){return a.pushMultisigTx(this.get("hex"))}});return e}),define("meklebar/models/signature",[],function(){"use strict";var a=Ember.Object.extend({number:null,hash:null,eckey:null,publicKeys:null,label:function(){return"Signature #"+this.get("number")}.property("number"),placeholder:function(){return"Private key or signature #"+this.get("number")}.property("number"),validPublic:function(){var a=this.get("hash"),b=this.get("signature"),c=this.get("publicKeys");return a&&!Ember.isEmpty(b)&&c?c.find(function(c){try{return Bitcoin.ECDSA.verify(a,b,c)}catch(d){return!1}}):void 0}.property("hash","signature","publicKeys.@each"),valid:Ember.computed.notEmpty("validPublic"),signature:function(a,b,c){if(1===arguments.length){var d=this.get("eckey"),e=this.get("hash");if(d&&e){var f=d.sign(e);return f.push(1),f}return c}return b?Crypto.util.hexToBytes(b):null}.property("hash","eckey"),hex:function(){var a=this.get("signature");if(a)return Crypto.util.bytesToHex(a)}.property("signature"),signatureOrKey:function(a,b,c){return 1===arguments.length?c:(51===b.length?(this.set("signature",null),this.set("eckey",new Bitcoin.ECKey(b))):b.length>52?(this.set("eckey",null),this.set("signature",b)):(this.set("eckey",null),this.set("signature",null)),b)}.property()});return a}),define("meklebar/router",[],function(){"use strict";var a=Ember.Router.extend();return a.map(function(){this.resource("send"),this.resource("redeem"),this.resource("approve")}),a}),define("meklebar/routes/application",[],function(){"use strict";var a=Ember.Route.extend({actions:{openModal:function(a){return this.render(a,{into:"application",outlet:"modal"})},closeModal:function(){return this.disconnectOutlet({outlet:"modal",parentView:"application"})}}});return a}),define("meklebar/routes/approve",["meklebar/models/redemption_tx"],function(a){"use strict";var b=Ember.Route.extend({model:function(){return a.create()}});return b}),define("meklebar/routes/redeem",["meklebar/models/redemption_tx"],function(a){"use strict";var b=Ember.Route.extend({model:function(){return a.create()}});return b}),define("meklebar/routes/send",["meklebar/models/escrow_transaction","meklebar/models/address"],function(a,b){"use strict";var c=Ember.Route.extend({model:function(){return a.create({source:b.create(),mediator:b.create({address:""}),receiver:b.create({address:""})})}});return c}),define("meklebar/utils/register_components",[],function(){"use strict";function a(a){var c,d=requirejs._eak_seen,e=d;if(e)for(var f in e)(c=f.match(/templates\/components\/(.*)$/))&&(require(f,null,null,!0),b(a,c[1]))}function b(a,b){Ember.assert("You provided a template named 'components/"+b+"', but custom components must include a '-'",b.match(/-/));var c="component:"+b,d="template:components/"+b;a.injection(c,"layout",d);var e=a.lookupFactory(c);e||(a.register(c,Ember.Component),e=a.lookupFactory(c)),Ember.Handlebars.helper(b,e)}return a}),define("meklebar/views/nav",[],function(){"use strict";var a=Ember.View.extend({didInsertElement:function(){this.$("[data-toggle=collapse]").collapse()}});return a}),define("meklebar/templates/application",[],function(){return Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h,i,j="",k=c.helperMissing,l=this.escapeExpression;return g={},h={},i={hash:{},contexts:[b],types:["STRING"],hashContexts:h,hashTypes:g,data:e},e.buffer.push(l((f=c.render||b.render,f?f.call(b,"nav",i):k.call(b,"render","nav",i)))),e.buffer.push('\n\n<div class="container">\n  '),g={},h={},e.buffer.push(l(c._triageMustache.call(b,"outlet",{hash:{},contexts:[b],types:["ID"],hashContexts:h,hashTypes:g,data:e}))),e.buffer.push("\n</div>\n\n"),g={},h={},i={hash:{},contexts:[b],types:["STRING"],hashContexts:h,hashTypes:g,data:e},e.buffer.push(l((f=c.outlet||b.outlet,f?f.call(b,"modal",i):k.call(b,"outlet","modal",i)))),e.buffer.push('\n\n<div class="container">\n  <footer>\n    <ul class="list-inline">\n      <li>by <a href="http://goshakkk.name/">@goshakkk</a></li>\n      <li>1MJhdUoDyAQAVuTidqmqrk5xeLUN3BEJ7n</li>\n      <li><a href="https://github.com/goshakkk/meklebar">View sources</a></li>\n    </ul>\n  </footer>\n</div>\n'),j})}),define("meklebar/templates/approve",[],function(){return Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){var d,e,f,i,j,k="";return b.buffer.push('\n  <p class="lead">\n    You have successfully approved redemption of\n    '),f={},i={},j={hash:{},contexts:[a],types:["ID"],hashContexts:i,hashTypes:f,data:b},b.buffer.push(u((d=c.btcValue||a.btcValue,d?d.call(a,"amountWithoutFee",j):t.call(a,"btcValue","amountWithoutFee",j)))),b.buffer.push(" BTC to\n    "),f={},i={},e=c["if"].call(a,"receiverBuyer",{hash:{},inverse:v.noop,fn:v.program(2,g,b),contexts:[a],types:["ID"],hashContexts:i,hashTypes:f,data:b}),(e||0===e)&&b.buffer.push(e),b.buffer.push("\n    "),f={},i={},e=c["if"].call(a,"receiverMerchant",{hash:{},inverse:v.noop,fn:v.program(4,h,b),contexts:[a],types:["ID"],hashContexts:i,hashTypes:f,data:b}),(e||0===e)&&b.buffer.push(e),b.buffer.push("\n    "),f={},i={},b.buffer.push(u(c._triageMustache.call(a,"address",{hash:{},contexts:[a],types:["ID"],hashContexts:i,hashTypes:f,data:b}))),b.buffer.push('. Give\n    buyer/merchant the following signature:\n  </p>\n\n  <p class="lead">\n    <pre>'),f={},i={},b.buffer.push(u(c._triageMustache.call(a,"signature.hex",{hash:{},contexts:[a],types:["ID"],hashContexts:i,hashTypes:f,data:b}))),b.buffer.push('</pre>\n  </p>\n\n  <p><a href="#" class="btn btn-primary" '),f={},i={},b.buffer.push(u(c.action.call(a,"reset",{hash:{},contexts:[a],types:["STRING"],hashContexts:i,hashTypes:f,data:b}))),b.buffer.push(">Reset</a></p>\n"),k}function g(a,b){b.buffer.push("buyer &mdash; ")}function h(a,b){b.buffer.push("merchant &mdash; ")}function i(a,b){var d,e,f,g,h,i="";return b.buffer.push('\n  <form class="form-horizontal">\n    <div class="form-group">\n      <div class="col-lg-offset-2 col-lg-10">\n        <div class="col-lg-7">\n          <div class="form-control-static">\n            <p>\n              Enter the redemption request code you have received below.\n              Verify the details of the requested transfer. If it looks good to you,\n              paste your private key and generate a signature.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    '),f={label:a,value:a,valid:a,comp:a,rows:a,placeholder:a,"input-class":a},g={label:"STRING",value:"ID",valid:"ID",comp:"STRING",rows:"INTEGER",placeholder:"STRING","input-class":"STRING"},h={hash:{label:"Code",value:"code",valid:"codeValid",comp:"textarea",rows:3,placeholder:"Code","input-class":"form-control"},inverse:v.noop,fn:v.program(7,j,b),contexts:[],types:[],hashContexts:f,hashTypes:g,data:b},d=c["validated-input"]||a["validated-input"],e=d?d.call(a,h):t.call(a,"validated-input",h),(e||0===e)&&b.buffer.push(e),b.buffer.push('\n\n    <div class="form-group">\n      <label class="col-lg-2 control-label">Details</label>\n      <div class="col-lg-10">\n        <div class="col-lg-7">\n          <p class="form-control-static">\n            '),g={},f={},e=c["if"].call(a,"hasDetails",{hash:{},inverse:v.program(12,m,b),fn:v.program(10,l,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:g,data:b}),(e||0===e)&&b.buffer.push(e),b.buffer.push("\n          </p>\n        </div>\n      </div>\n    </div>\n\n    "),f={label:a,value:a,valid:a,placeholder:a,maxlength:a,"input-class":a},g={label:"STRING",value:"ID",valid:"ID",placeholder:"STRING",maxlength:"INTEGER","input-class":"STRING"},h={hash:{label:"Private key",value:"signature.signatureOrKey",valid:"signature.valid",placeholder:"Private key",maxlength:51,"input-class":"form-control"},inverse:v.noop,fn:v.program(14,n,b),contexts:[],types:[],hashContexts:f,hashTypes:g,data:b},d=c["validated-input"]||a["validated-input"],e=d?d.call(a,h):t.call(a,"validated-input",h),(e||0===e)&&b.buffer.push(e),b.buffer.push('\n\n    <div class="form-group">\n      <div class="col-lg-offset-2 col-lg-10">\n        <div class="col-lg-7">\n          <a href="#" '),f={"class":a},g={"class":"STRING"},h={hash:{"class":"signature.valid::disabled :btn :btn-primary"},contexts:[],types:[],hashContexts:f,hashTypes:g,data:b},b.buffer.push(u((d=c["bind-attr"]||a["bind-attr"],d?d.call(a,h):t.call(a,"bind-attr",h)))),b.buffer.push(" "),g={},f={},b.buffer.push(u(c.action.call(a,"sign",{hash:{},contexts:[a],types:["STRING"],hashContexts:f,hashTypes:g,data:b}))),b.buffer.push(">Approve redemption</a>\n        </div>\n      </div>\n    </div>\n  </form>\n"),i}function j(a,b){var d,e,f,g="";return b.buffer.push("\n      "),e={},f={},d=c["if"].call(a,"view.focusedInvalid",{hash:{},inverse:v.noop,fn:v.program(8,k,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n    "),g}function k(a,b){b.buffer.push('\n        <span class="has-error">\n          <span class="help-block">\n            Invalid code.\n          </span>\n        </span>\n      ')}function l(a,b){var d,e,f,i,j,k="";return b.buffer.push("\n              Allow redemption of\n              "),f={},i={},j={hash:{},contexts:[a],types:["ID"],hashContexts:i,hashTypes:f,data:b},b.buffer.push(u((d=c.btcValue||a.btcValue,d?d.call(a,"amount",j):t.call(a,"btcValue","amount",j)))),b.buffer.push(" BTC - "),f={},i={},b.buffer.push(u(c._triageMustache.call(a,"fee",{hash:{},contexts:[a],types:["ID"],hashContexts:i,hashTypes:f,data:b}))),b.buffer.push(" BTC = <b>"),f={},i={},j={hash:{},contexts:[a],types:["ID"],hashContexts:i,hashTypes:f,data:b},b.buffer.push(u((d=c.btcValue||a.btcValue,d?d.call(a,"amountWithoutFee",j):t.call(a,"btcValue","amountWithoutFee",j)))),b.buffer.push(" BTC</b>\n              to\n              "),f={},i={},e=c["if"].call(a,"receiverBuyer",{hash:{},inverse:v.noop,fn:v.program(2,g,b),contexts:[a],types:["ID"],hashContexts:i,hashTypes:f,data:b}),(e||0===e)&&b.buffer.push(e),b.buffer.push("\n              "),f={},i={},e=c["if"].call(a,"receiverMerchant",{hash:{},inverse:v.noop,fn:v.program(4,h,b),contexts:[a],types:["ID"],hashContexts:i,hashTypes:f,data:b}),(e||0===e)&&b.buffer.push(e),b.buffer.push("\n              <b>"),f={},i={},b.buffer.push(u(c._triageMustache.call(a,"address",{hash:{},contexts:[a],types:["ID"],hashContexts:i,hashTypes:f,data:b}))),b.buffer.push("</b>\n              (per transaction <a "),i={href:a},f={href:"STRING"},j={hash:{href:"blockchainUrl"},contexts:[],types:[],hashContexts:i,hashTypes:f,data:b},b.buffer.push(u((d=c["bind-attr"]||a["bind-attr"],d?d.call(a,j):t.call(a,"bind-attr",j)))),b.buffer.push(">"),f={},i={},b.buffer.push(u(c._triageMustache.call(a,"inputHash",{hash:{},contexts:[a],types:["ID"],hashContexts:i,hashTypes:f,data:b}))),b.buffer.push("</a>).\n            "),k}function m(a,b){b.buffer.push("\n              &mdash;\n            ")}function n(a,b){var d,e,f,g="";return b.buffer.push('\n      <span class="help-block"><a href="#" '),e={},f={},b.buffer.push(u(c.action.call(a,"openModal","help/private-key",{hash:{},contexts:[a,a],types:["STRING","STRING"],hashContexts:f,hashTypes:e,data:b}))),b.buffer.push(">Why is it needed and where can I find it?</a></span>\n\n      "),e={},f={},d=c["if"].call(a,"view.focusedInvalid",{hash:{},inverse:v.noop,fn:v.program(15,o,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n    "),g}function o(a,b){b.buffer.push('\n        <span class="has-error">\n          <span class="help-block">\n            Invalid private key.\n          </span>\n        </span>\n      ')}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var p,q,r,s="",t=c.helperMissing,u=this.escapeExpression,v=this;return e.buffer.push("<h2>Approve escrow redemption</h2>\n\n"),q={},r={},p=c["if"].call(b,"showSignature",{hash:{},inverse:v.program(6,i,e),fn:v.program(1,f,e),contexts:[b],types:["ID"],hashContexts:r,hashTypes:q,data:e}),(p||0===p)&&e.buffer.push(p),e.buffer.push("\n"),s})}),define("meklebar/templates/components/modal-dialog",[],function(){return Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h="",i=this.escapeExpression;return e.buffer.push('<div class="modal-backdrop in"></div>\n\n<div class="modal modal-display" '),f={},g={},e.buffer.push(i(c.action.call(b,"close",{hash:{},contexts:[b],types:["STRING"],hashContexts:g,hashTypes:f,data:e}))),e.buffer.push('>\n  <div class="modal-dialog" '),g={bubbles:b},f={bubbles:"BOOLEAN"},e.buffer.push(i(c.action.call(b,{hash:{bubbles:!1},contexts:[],types:[],hashContexts:g,hashTypes:f,data:e}))),e.buffer.push('>\n    <div class="modal-content">\n      <div class="modal-header">\n        <a '),f={},g={},e.buffer.push(i(c.action.call(b,"close",{hash:{},contexts:[b],types:["STRING"],hashContexts:g,hashTypes:f,data:e}))),e.buffer.push(' href="#" class="close">&times;</a>\n        <h4 class="modal-title">'),f={},g={},e.buffer.push(i(c._triageMustache.call(b,"title",{hash:{},contexts:[b],types:["ID"],hashContexts:g,hashTypes:f,data:e}))),e.buffer.push('</h4>\n      </div>\n      <div class="modal-body">\n        '),f={},g={},e.buffer.push(i(c._triageMustache.call(b,"yield",{hash:{},contexts:[b],types:["ID"],hashContexts:g,hashTypes:f,data:e}))),e.buffer.push("\n      </div>\n    </div>\n  </div>\n</div>\n"),h})}),define("meklebar/templates/components/number-input",[],function(){return Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f="";return f})}),define("meklebar/templates/components/validated-input-inner",[],function(){return Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f="";return f})}),define("meklebar/templates/components/validated-input",[],function(){return Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h,i,j="",k=this.escapeExpression,l=c.helperMissing;return e.buffer.push('<label class="col-lg-2 control-label">\n  '),g={},h={},e.buffer.push(k(c._triageMustache.call(b,"label",{hash:{},contexts:[b],types:["ID"],hashContexts:h,hashTypes:g,data:e}))),e.buffer.push('\n</label>\n\n<div class="col-lg-10">\n  <div '),h={"class":b},g={"class":"STRING"},i={hash:{"class":"inputColClass"},contexts:[],types:[],hashContexts:h,hashTypes:g,data:e},e.buffer.push(k((f=c["bind-attr"]||b["bind-attr"],f?f.call(b,i):l.call(b,"bind-attr",i)))),e.buffer.push(">\n    "),h={"class":b},g={"class":"ID"},e.buffer.push(k(c.view.call(b,"compView",{hash:{"class":"input-class"},contexts:[b],types:["ID"],hashContexts:h,hashTypes:g,data:e}))),e.buffer.push("\n\n    "),g={},h={},e.buffer.push(k(c._triageMustache.call(b,"yield",{hash:{},contexts:[b],types:["ID"],hashContexts:h,hashTypes:g,data:e}))),e.buffer.push("\n  </div>\n\n  "),h={condition:b,"class":b},g={condition:"ID","class":"STRING"},i={hash:{condition:"valid","class":"control-label"},contexts:[],types:[],hashContexts:h,hashTypes:g,data:e},e.buffer.push(k((f=c["validation-glyphicon"]||b["validation-glyphicon"],f?f.call(b,i):l.call(b,"validation-glyphicon",i)))),e.buffer.push("\n</div>\n"),j
})}),define("meklebar/templates/components/validated-number-input-inner",[],function(){return Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f="";return f})}),define("meklebar/templates/components/validated-textarea-input-inner",[],function(){return Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f="";return f})}),define("meklebar/templates/components/validation-glyphicon",[],function(){return Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f="";return f})}),define("meklebar/templates/help/private-key",[],function(){return Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){b.buffer.push('\n  <p>\n    A <b>private key</b> is a secret number that allows you to spend your coins. Every bitcoin address has a matching private key.\n  </p>\n\n  <div class="alert alert-warning">\n    <b>Note:</b> Meklebar does not store your private key in the browser, nor does it transmit it over the network.\n    Your private key is only used for signing transactions client-side. It never leaves your computer.\n    You may check Meklebar sources to verify this statement.\n  </div>\n\n  <h3>Where to find it?</h3>\n\n  <p>Here is how you can find your private key in the popular wallet apps:</p>\n\n  <h4>Bitcoin QT</h4>\n\n  <ol>\n    <li>Launch Bitcoin QT application</li>\n    <li>Find your address in Receive/Addresses tabs, select one, click "Copy Address"</li>\n    <li>Click "Help" in menu bar</li>\n    <li>Click "Debug window"</li>\n    <li>Select "Console" tab</li>\n    <li><i>If your wallet is protected by passphrase</i>, enter <code>walletpassphrase "your pass phrase" 600</code></li>\n    <li>Type <code>dumpprivkey "paste your address here"</code> and press return</li>\n    <li>It will return your private key, something like <code>KwRt3YD1Kv4LhDSREwRZy4vv4BvVoxgPBL338NoMq1J98R6cJu8z</code></li>\n    <li>Copy it and paste it to Meklebar</li>\n  </ol>\n\n  <h4>Blockchain Wallet</h4>\n\n  <ol>\n    <li>Log into your wallet</li>\n    <li>Select "Import / Export" tab</li>\n    <li>If you are prompted for your password, enter it</li>\n    <li>Select "Export Unencrypted" in the sidebar</li>\n    <li>In a section that just appeared, find the select prompting for private key format</li>\n    <li>Select "Bitcoin-Qt Format" there</li>\n    <li>In a gray field below, locate your address</li>\n    <li>Copy the corresponding private key and paste it to Meklebar</li>\n  </ol>\n\n  <h4>Electrum</h4>\n\n  <ol>\n    <li>Launch Electrum application</li>\n    <li>Select "Receive" tab</li>\n    <li>Locate your address</li>\n    <li>Right-click it and choose "Private key"</li>\n    <li>Copy the private key and past it to Meklebar</li>\n  </ol>\n')}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var g,h,i,j,k,l="",m=this,n=c.helperMissing;return i={title:b},j={title:"STRING"},k={hash:{title:"On the private keys"},inverse:m.noop,fn:m.program(1,f,e),contexts:[],types:[],hashContexts:i,hashTypes:j,data:e},g=c["modal-dialog"]||b["modal-dialog"],h=g?g.call(b,k):n.call(b,"modal-dialog",k),(h||0===h)&&e.buffer.push(h),e.buffer.push("\n"),l})}),define("meklebar/templates/help/public-key",[],function(){return Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){b.buffer.push('\n  <p>\n    A <b>public key</b> is something that identifies your wallet.<br>\n    An <b>address</b> is a shorter representation of your public key.<br>\n    A record of your public key in an escrow transaction means that you may sign the redeeming transaction and it will be accepted.\n  </p>\n\n  <h3>Where to find address?</h3>\n\n  <p>Most of the clients list your addresses under "Receive" tab or similar. Simply go there and copy the needed address.</p>\n\n  <p>\n    Sometimes, though, like in the case when you never transacted from this address, it will not be possible to find a public key\n    for your address. In these cases will appear a red lebel below "public key/address" input field.\n  </p>\n\n  <h3>Where to find public key?</h3>\n\n  <p>Here is how you can find your public key in the popular wallet apps:</p>\n\n  <h4>Bitcoin QT</h4>\n\n  <ol>\n    <li>Launch Bitcoin QT application</li>\n    <li>Find your address in Receive/Addresses tabs, select one, click "Copy Address"</li>\n    <li>Click "Help" in menu bar</li>\n    <li>Click "Debug window"</li>\n    <li>Select "Console" tab</li>\n    <li>Type <code>validateaddress "paste your address here"</code> and press return</li>\n    <li>It will return your a hash of data</li>\n    <li>Locate "pubkey" and the corresponding public key, something like <code>03d2777f634a26d267334dab6765afd813e6361822c006bae8cc75bc0dd61eb294</code></li>\n    <li>Copy it and paste it to Meklebar</li>\n  </ol>\n\n  <h4>Blockchain Wallet</h4>\n\n  <ol>\n    <li>Log into your wallet</li>\n    <li>Select "Receive Money" tab</li>\n    <li>Locate your address and click on the "Actions" button next to it</li>\n    <li>Select "Show Public Key" there</li>\n    <li>There will appear a green notification on the right top side of the screen.\n    <li>Copy the public key and paste it to Meklebar</li>\n  </ol>\n\n  <h4>Electrum</h4>\n\n  <ol>\n    <li>Launch Electrum application</li>\n    <li>Find your address in "Receive" tab, select one, right-click and "Copy to clipboard"</li>\n    <li>Select "Console" tab</li>\n    <li>Type <code>validateaddress("paste your address here")</code> (brackets and quotes are important) and press return</li>\n    <li>It will return your a hash of data</li>\n    <li>Locate "pubkey" and the corresponding public key, something like <code>03d2777f634a26d267334dab6765afd813e6361822c006bae8cc75bc0dd61eb294</code></li>\n    <li>Copy it and paste it to Meklebar</li>\n  </ol>\n')}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var g,h,i,j,k,l="",m=this,n=c.helperMissing;return i={title:b},j={title:"STRING"},k={hash:{title:"On the public keys and addresses"},inverse:m.noop,fn:m.program(1,f,e),contexts:[],types:[],hashContexts:i,hashTypes:j,data:e},g=c["modal-dialog"]||b["modal-dialog"],h=g?g.call(b,k):n.call(b,"modal-dialog",k),(h||0===h)&&e.buffer.push(h),e.buffer.push("\n"),l})}),define("meklebar/templates/help/why-fee",[],function(){return Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){b.buffer.push("\n  <p>\n    Transaction fees are needed in order to ensure the miners process the transaction.\n    Without a fee the transaction may take a long time to get confirmed or it may not get confirmed at all.\n  </p>\n")}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var g,h,i,j,k,l="",m=this,n=c.helperMissing;return i={title:b},j={title:"STRING"},k={hash:{title:"Why the fees"},inverse:m.noop,fn:m.program(1,f,e),contexts:[],types:[],hashContexts:i,hashTypes:j,data:e},g=c["modal-dialog"]||b["modal-dialog"],h=g?g.call(b,k):n.call(b,"modal-dialog",k),(h||0===h)&&e.buffer.push(h),e.buffer.push("\n"),l})}),define("meklebar/templates/index",[],function(){return Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){b.buffer.push('"Send"')}function g(a,b){b.buffer.push('"Redeem"')}function h(a,b){b.buffer.push('"Approve"')}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var i,j,k,l,m,n="",o=this,p=c.helperMissing;return e.buffer.push('<h2>What is Meklebar?</h2>\n\n<p>\n  <a href="http://bitcoin.it/wiki/Contracts">Bitcoin contracts</a> are awesome.\n  Yet, almost no wallet application allows creation of something more than just\n  a pay-to-address- transaction. Meklebar aims to bridge this gap and allow\n  creation of escrow transactions no matter what wallet app you use.\n</p>\n\n<h2>What is an escrow transaction?</h2>\n\n<p>\n  Escrow transaction is a way to lock up some coins so a third party is able\n  to assign the coins in case of a dispute, but unable to take the coins\n  themselves.\n</p>\n\n<p>\n  For example, a buyer of some good wants to trade with somebody they do not\n  know or trust. In a case where the transaction goes well, the client does not\n  want to get any third party involved. But if something does go wrong, they\n  would like a third party &mdash; probably a professional dispute mediator\n  &mdash; to resolve the conflict and decide who gets the money.\n</p>\n\n<h2>How does it work?</h2>\n\n<h3>Buyer creates an escrow transaction</h3>\n\n<ol>\n  <li>Buyer agrees with the merchant on a mediator</li>\n  <li>Buyer asks the merchant and the mediator for their public keys</li>\n  <li>Buyer goes to '),k={},l={},m={hash:{},inverse:o.noop,fn:o.program(1,f,e),contexts:[b],types:["STRING"],hashContexts:l,hashTypes:k,data:e},i=c["link-to"]||b["link-to"],j=i?i.call(b,"send",m):p.call(b,"link-to","send",m),(j||0===j)&&e.buffer.push(j),e.buffer.push(" tab and fills the form</li>\n  <li>Buyer is presented with Transaction ID &mdash; the buyer should share it with the merchant and the mediator</li>\n</ol>\n\n<p>Now the coins are locked up and there are three possible scenarios:</p>\n\n<ol>\n  <li>Buyer and merchant agree (a successful trade, for example)</li>\n  <li>Buyer and mediator agree (a failed trade, mediator sides with a buyer)</li>\n  <li>Merchant and mediator agree (good delivered, mediator sides with a merchant)</li>\n</ol>\n\n<h3>Buyer and merchant agree</h3>\n\n<p>\n  The simplest scenario is when buyer and merchant agree on the transaction. In\n  this case, redemption looks like this:\n</p>\n\n<ol>\n  <li>\n    Merchant goes to "),k={},l={},m={hash:{},inverse:o.noop,fn:o.program(3,g,e),contexts:[b],types:["STRING"],hashContexts:l,hashTypes:k,data:e},i=c["link-to"]||b["link-to"],j=i?i.call(b,"redeem",m):p.call(b,"link-to","redeem",m),(j||0===j)&&e.buffer.push(j),e.buffer.push(" tab, enters the\n    Transaction ID, that the buyer provided them with after funding the escrow,\n    and the address on which they wish to receive the money.\n  </li>\n\n  <li>\n    At this point, merchant needs two signatures to complete redemption &mdash;\n    one their own, and one of the buyer.\n  </li>\n\n  <li>\n    After entering Transaction ID and receiving address, merchant will see a\n    code that buyer will need to sign. Merchant copies this code and\n    communicates it to buyer.\n  </li>\n\n  <li>\n    Buyer goes to "),k={},l={},m={hash:{},inverse:o.noop,fn:o.program(5,h,e),contexts:[b],types:["STRING"],hashContexts:l,hashTypes:k,data:e},i=c["link-to"]||b["link-to"],j=i?i.call(b,"approve",m):p.call(b,"link-to","approve",m),(j||0===j)&&e.buffer.push(j),e.buffer.push(' tab and pastes\n    the code. After this, they will see details of redemption transactions\n    (which amount goes to which wallet). If everything looks good, buyer pastes\n    their private key and generates the signature.\n  </li>\n\n  <li>Buyer communicates the signature to merchant.</li>\n\n  <li>\n    On redemption page, merchant pastes the signature of the buyer to one of the\n    signature fields, and enters their private key into another signature field.\n  </li>\n\n  <li>\n    If the signatures are valid, the "Redeem" button will become active. By\n    clicking on this button, merchant broadcasts the redemption transaction to\n    the network.\n  </li>\n\n  <li>\n    After sending the redeeming transaction, Meklebar will show the ID of\n    redeeming transaction for merchant\'s reference. The coins will appear in\n    merchant\'s wallet.\n  </li>\n</ol>\n\n<h3>Buyer and mediator agree, merchant and mediator agree</h3>\n\n<p>\n  In the cases when merchant and buyer do not agree, the mediator will decide\n  who gets the money. The redemption process will be similar to that of the\n  "buyer and merchant agree" scenario, with the difference being that the\n  redemption is done by the party that mediator sided with; and mediator will\n  sign the redemption.\n</p>\n\n<p>In other words:</p>\n\n<ul>\n  <li>\n    mediator sides with buyer &mdash; buyer creates redemption transaction,\n    asks mediator to sign, and completes redemption\n  </li>\n\n  <li>\n    mediator sides with merchant &mdash; merchant creates redemption\n    transaction, asks mediator to sign, and completes redemption\n  </li>\n</ul>\n'),n})}),define("meklebar/templates/nav",[],function(){return Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){b.buffer.push("Meklebar")}function g(a,b){var d,e,f,g,i;f={},g={},i={hash:{},inverse:s.noop,fn:s.program(4,h,b),contexts:[a],types:["STRING"],hashContexts:g,hashTypes:f,data:b},d=c["link-to"]||a["link-to"],e=d?d.call(a,"send",i):t.call(a,"link-to","send",i),e||0===e?b.buffer.push(e):b.buffer.push("")}function h(a,b){b.buffer.push("Send")}function i(a,b){var d,e,f,g,h;f={},g={},h={hash:{},inverse:s.noop,fn:s.program(7,j,b),contexts:[a],types:["STRING"],hashContexts:g,hashTypes:f,data:b},d=c["link-to"]||a["link-to"],e=d?d.call(a,"redeem",h):t.call(a,"link-to","redeem",h),e||0===e?b.buffer.push(e):b.buffer.push("")}function j(a,b){b.buffer.push("Redeem")}function k(a,b){var d,e,f,g,h;f={},g={},h={hash:{},inverse:s.noop,fn:s.program(10,l,b),contexts:[a],types:["STRING"],hashContexts:g,hashTypes:f,data:b},d=c["link-to"]||a["link-to"],e=d?d.call(a,"approve",h):t.call(a,"link-to","approve",h),e||0===e?b.buffer.push(e):b.buffer.push("")}function l(a,b){b.buffer.push("Approve")}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var m,n,o,p,q,r="",s=this,t=c.helperMissing;return e.buffer.push('<nav class="navbar navbar-default" role="navigation">\n  <div class="container">\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse">\n        <span class="sr-only">Toggle navigation</span>\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n      </button>\n      '),o={"class":b},p={"class":"STRING"},q={hash:{"class":"navbar-brand"},inverse:s.noop,fn:s.program(1,f,e),contexts:[b],types:["STRING"],hashContexts:o,hashTypes:p,data:e},m=c["link-to"]||b["link-to"],n=m?m.call(b,"index",q):t.call(b,"link-to","index",q),(n||0===n)&&e.buffer.push(n),e.buffer.push('\n    </div>\n\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse navbar-ex1-collapse">\n      <ul class="nav navbar-nav">\n        '),o={tagName:b,href:b},p={tagName:"STRING",href:"BOOLEAN"},q={hash:{tagName:"li",href:!1},inverse:s.noop,fn:s.program(3,g,e),contexts:[b],types:["STRING"],hashContexts:o,hashTypes:p,data:e},m=c["link-to"]||b["link-to"],n=m?m.call(b,"send",q):t.call(b,"link-to","send",q),(n||0===n)&&e.buffer.push(n),e.buffer.push("\n        "),o={tagName:b,href:b},p={tagName:"STRING",href:"BOOLEAN"},q={hash:{tagName:"li",href:!1},inverse:s.noop,fn:s.program(6,i,e),contexts:[b],types:["STRING"],hashContexts:o,hashTypes:p,data:e},m=c["link-to"]||b["link-to"],n=m?m.call(b,"redeem",q):t.call(b,"link-to","redeem",q),(n||0===n)&&e.buffer.push(n),e.buffer.push("\n        "),o={tagName:b,href:b},p={tagName:"STRING",href:"BOOLEAN"},q={hash:{tagName:"li",href:!1},inverse:s.noop,fn:s.program(9,k,e),contexts:[b],types:["STRING"],hashContexts:o,hashTypes:p,data:e},m=c["link-to"]||b["link-to"],n=m?m.call(b,"approve",q):t.call(b,"link-to","approve",q),(n||0===n)&&e.buffer.push(n),e.buffer.push("\n      </ul>\n    </div>\n  </div>\n</nav>\n"),r})}),define("meklebar/templates/redeem",[],function(){return Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){var d,e,f,g,h="";return b.buffer.push('\n  <p class="lead">\n    You have successfully redeemed '),e={},f={},g={hash:{},contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b},b.buffer.push(C((d=c.btcValue||a.btcValue,d?d.call(a,"amountWithoutFee",g):B.call(a,"btcValue","amountWithoutFee",g)))),b.buffer.push(" BTC from escrow\n    to the address "),e={},f={},b.buffer.push(C(c._triageMustache.call(a,"address",{hash:{},contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}))),b.buffer.push('.\n  </p>\n\n  <p class="lead">\n    Redemption transacion ID is <b>'),e={},f={},b.buffer.push(C(c._triageMustache.call(a,"hash",{hash:{},contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}))),b.buffer.push("</b>\n    <small>(<a "),f={href:a},e={href:"STRING"},g={hash:{href:"blockchainUrl"},contexts:[],types:[],hashContexts:f,hashTypes:e,data:b},b.buffer.push(C((d=c["bind-attr"]||a["bind-attr"],d?d.call(a,g):B.call(a,"bind-attr",g)))),b.buffer.push('>view</a>)</small>.\n    Redemption transaction may take a while to fully confirm.\n  </p>\n\n  <a href="#" class="btn btn-primary" '),e={},f={},b.buffer.push(C(c.action.call(a,"reset",{hash:{},contexts:[a],types:["STRING"],hashContexts:f,hashTypes:e,data:b}))),b.buffer.push(">OK</a>\n"),h}function g(a,b){var d,e,f,g,i,j="";return b.buffer.push('\n  <form class="form-horizontal">\n    <div class="form-group">\n      <div class="col-lg-offset-2 col-lg-10">\n        <div class="col-lg-7">\n          <div class="form-control-static">\n            <p>\n              To redeem escrow coins, you have to know Transaction ID, have your\n              private key, and have a signature of mediator or buyer/seller.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    '),f={label:a,value:a,valid:a,placeholder:a,maxlength:a,"input-class":a},g={label:"STRING",value:"ID",valid:"ID",placeholder:"STRING",maxlength:"INTEGER","input-class":"STRING"},i={hash:{label:"Transaction hash",value:"inputHash",valid:"validTx",placeholder:"Transaction hash",maxlength:64,"input-class":"form-control"},inverse:D.noop,fn:D.program(4,h,b),contexts:[],types:[],hashContexts:f,hashTypes:g,data:b},d=c["validated-input"]||a["validated-input"],e=d?d.call(a,i):B.call(a,"validated-input",i),(e||0===e)&&b.buffer.push(e),b.buffer.push('\n\n    <div class="form-group">\n      <label class="col-lg-2 control-label">Amount</label>\n      <div class="col-lg-10">\n        <div class="col-lg-7">\n          <p class="form-control-static">\n            '),g={},f={},e=c["if"].call(a,"amount",{hash:{},inverse:D.program(11,l,b),fn:D.program(9,k,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:g,data:b}),(e||0===e)&&b.buffer.push(e),b.buffer.push("\n          </p>\n        </div>\n      </div>\n    </div>\n\n    "),f={label:a,value:a,valid:a,placeholder:a,maxlength:a,"input-class":a},g={label:"STRING",value:"ID",valid:"ID",placeholder:"STRING",maxlength:"INTEGER","input-class":"STRING"},i={hash:{label:"Redeem to (address)",value:"address",valid:"validAddress",placeholder:"Redeem to address",maxlength:34,"input-class":"form-control"},inverse:D.noop,fn:D.program(13,m,b),contexts:[],types:[],hashContexts:f,hashTypes:g,data:b},d=c["validated-input"]||a["validated-input"],e=d?d.call(a,i):B.call(a,"validated-input",i),(e||0===e)&&b.buffer.push(e),b.buffer.push("\n\n    "),g={},f={},e=c["if"].call(a,"moreThanOneSig",{hash:{},inverse:D.noop,fn:D.program(16,o,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:g,data:b}),(e||0===e)&&b.buffer.push(e),b.buffer.push("\n\n    "),g={},f={},e=c.each.call(a,"signatures",{hash:{},inverse:D.noop,fn:D.program(21,r,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:g,data:b}),(e||0===e)&&b.buffer.push(e),b.buffer.push('\n\n    <div class="form-group">\n      <div class="col-lg-offset-2 col-lg-10">\n        <div class="col-lg-7">\n          <a href="#" '),f={"class":a},g={"class":"STRING"},i={hash:{"class":"redeemDisabled:disabled :btn :btn-primary"},contexts:[],types:[],hashContexts:f,hashTypes:g,data:b},b.buffer.push(C((d=c["bind-attr"]||a["bind-attr"],d?d.call(a,i):B.call(a,"bind-attr",i)))),b.buffer.push(" "),g={},f={},b.buffer.push(C(c.action.call(a,"redeem",{hash:{},contexts:[a],types:["STRING"],hashContexts:f,hashTypes:g,data:b}))),b.buffer.push(">\n            "),g={},f={},e=c["if"].call(a,"sendingTx",{hash:{},inverse:D.program(27,v,b),fn:D.program(25,u,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:g,data:b}),(e||0===e)&&b.buffer.push(e),b.buffer.push("\n          </a>\n\n          "),g={},f={},e=c["if"].call(a,"error",{hash:{},inverse:D.noop,fn:D.program(29,w,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:g,data:b}),(e||0===e)&&b.buffer.push(e),b.buffer.push("\n        </div>\n      </div>\n    </div>\n  </form>\n"),j}function h(a,b){var d,e,f,g="";return b.buffer.push("\n      "),e={},f={},d=c["if"].call(a,"view.valid",{hash:{},inverse:D.noop,fn:D.program(5,i,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n\n      "),e={},f={},d=c["if"].call(a,"view.focusedInvalid",{hash:{},inverse:D.noop,fn:D.program(7,j,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n    "),g}function i(a,b){var d,e,f="";return b.buffer.push('\n        <span class="help-block">\n          Signatures needed: '),d={},e={},b.buffer.push(C(c._triageMustache.call(a,"input.escrowOut.signaturesNeeded",{hash:{},contexts:[a],types:["ID"],hashContexts:e,hashTypes:d,data:b}))),b.buffer.push(" (out of "),d={},e={},b.buffer.push(C(c._triageMustache.call(a,"input.escrowOut.signers.length",{hash:{},contexts:[a],types:["ID"],hashContexts:e,hashTypes:d,data:b}))),b.buffer.push(" designated signers)\n        </span>\n      "),f}function j(a,b){b.buffer.push('\n        <span class="has-error">\n          <span class="help-block">\n            Invalid transaction. It either does not exist or is not confirmed.\n          </span>\n        </span>\n      ')}function k(a,b){var d,e,f,g,h="";return b.buffer.push("\n              "),e={},f={},g={hash:{},contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b},b.buffer.push(C((d=c.btcValue||a.btcValue,d?d.call(a,"amount",g):B.call(a,"btcValue","amount",g)))),b.buffer.push(" BTC - "),e={},f={},b.buffer.push(C(c._triageMustache.call(a,"fee",{hash:{},contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}))),b.buffer.push(" BTC = <b>"),e={},f={},g={hash:{},contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b},b.buffer.push(C((d=c.btcValue||a.btcValue,d?d.call(a,"amountWithoutFee",g):B.call(a,"btcValue","amountWithoutFee",g)))),b.buffer.push('</b> BTC.\n              <a href="#" '),e={},f={},b.buffer.push(C(c.action.call(a,"openModal","help/why-fee",{hash:{},contexts:[a,a],types:["STRING","STRING"],hashContexts:f,hashTypes:e,data:b}))),b.buffer.push(">Why the fees?</a>\n            "),h}function l(a,b){b.buffer.push("\n              &mdash;\n            ")}function m(a,b){var d,e,f,g="";return b.buffer.push("\n      "),e={},f={},d=c["if"].call(a,"view.focusedInvalid",{hash:{},inverse:D.noop,fn:D.program(14,n,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n    "),g}function n(a,b){b.buffer.push('\n        <span class="has-error">\n          <span class="help-block">\n            Invalid address.\n          </span>\n        </span>\n      ')}function o(a,b){var d,e,f,g="";return b.buffer.push('\n      <div class="form-group">\n        <div class="col-lg-offset-2 col-lg-10">\n          <div class="col-lg-7">\n            <div class="form-control-static">\n              <p>\n                To complete redemption to '),e={},f={},b.buffer.push(C(c._triageMustache.call(a,"address",{hash:{},contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}))),b.buffer.push(",\n                "),e={},f={},d=c["if"].call(a,"receiverMerchant",{hash:{},inverse:D.program(19,q,b),fn:D.program(17,p,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n                to sign this code:</p>\n              <pre>"),e={},f={},b.buffer.push(C(c._triageMustache.call(a,"requestCode",{hash:{},contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}))),b.buffer.push("</pre>\n              <p>Then fill the fields below with your own private key and the signature(s) of others.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    "),g}function p(a,b){b.buffer.push("mediator")}function q(a,b){b.buffer.push("merchant/mediator")}function r(a,b){var d,e,f,g,h,i="";return b.buffer.push("\n      "),f={label:a,value:a,valid:a,placeholder:a,maxlength:a,"input-class":a},g={label:"ID",value:"ID",valid:"ID",placeholder:"ID",maxlength:"INTEGER","input-class":"STRING"},h={hash:{label:"label",value:"signatureOrKey",valid:"valid",placeholder:"placeholder",maxlength:160,"input-class":"form-control"},inverse:D.noop,fn:D.program(22,s,b),contexts:[],types:[],hashContexts:f,hashTypes:g,data:b},d=c["validated-input"]||a["validated-input"],e=d?d.call(a,h):B.call(a,"validated-input",h),(e||0===e)&&b.buffer.push(e),b.buffer.push("\n    "),i}function s(a,b){var d,e,f,g="";return b.buffer.push("\n        "),e={},f={},d=c["if"].call(a,"view.focusedInvalid",{hash:{},inverse:D.noop,fn:D.program(23,t,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n      "),g}function t(a,b){b.buffer.push('\n          <span class="has-error">\n            <span class="help-block">\n              Invalid private key or signature.\n            </span>\n          </span>\n        ')}function u(a,b){b.buffer.push("Redeeming...")}function v(a,b){b.buffer.push("Redeem")}function w(a,b){var d,e,f="";return b.buffer.push("<b>Transaction error: "),d={},e={},b.buffer.push(C(c._triageMustache.call(a,"error",{hash:{},contexts:[a],types:["ID"],hashContexts:e,hashTypes:d,data:b}))),b.buffer.push("</b>"),f}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var x,y,z,A="",B=c.helperMissing,C=this.escapeExpression,D=this;return e.buffer.push("<h2>Redeem</h2>\n\n"),y={},z={},x=c["if"].call(b,"pushSuccess",{hash:{},inverse:D.program(3,g,e),fn:D.program(1,f,e),contexts:[b],types:["ID"],hashContexts:z,hashTypes:y,data:e}),(x||0===x)&&e.buffer.push(x),e.buffer.push("\n"),A})}),define("meklebar/templates/send",[],function(){return Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){var d,e,f,g,h="";return b.buffer.push('\n  <p class="lead">\n    Your escrow transaction was succesfully funded. Please, make note of\n    the Transaction ID and share it with merchant and mediator.\n  </div>\n\n  <p class="lead">\n    Transaction ID is <b>'),e={},f={},b.buffer.push(F(c._triageMustache.call(a,"hash",{hash:{},contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}))),b.buffer.push("</b>\n    <small>(<a "),f={href:a},e={href:"STRING"},g={hash:{href:"blockchainUrl"},contexts:[],types:[],hashContexts:f,hashTypes:e,data:b},b.buffer.push(F((d=c["bind-attr"]||a["bind-attr"],d?d.call(a,g):G.call(a,"bind-attr",g)))),b.buffer.push('>view</a>)</small>\n  </p>\n\n  <a href="#" class="btn btn-primary" '),e={},f={},b.buffer.push(F(c.action.call(a,"reset",{hash:{},contexts:[a],types:["STRING"],hashContexts:f,hashTypes:e,data:b}))),b.buffer.push(">OK</a>\n"),h}function g(a,b){var d,e,f,g,i,j="";return b.buffer.push('\n  <form class="form-horizontal">\n    <div class="form-group">\n      <div class="col-lg-offset-2 col-lg-10">\n        <div class="col-lg-7">\n          <div class="form-control-static">\n            <p>\n              To create an escrow transaction, you would need your private\n              key, as well as public keys or addresses of the intended receiver and\n              the mediator.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    '),f={label:a,value:a,valid:a,placeholder:a,maxlength:a,"input-class":a},g={label:"STRING",value:"ID",valid:"ID",placeholder:"STRING",maxlength:"INTEGER","input-class":"STRING"},i={hash:{label:"Private key (sender)",value:"source.priv",valid:"source.addrValid",placeholder:"Private key",maxlength:51,"input-class":"form-control"},inverse:H.noop,fn:H.program(4,h,b),contexts:[],types:[],hashContexts:f,hashTypes:g,data:b},d=c["validated-input"]||a["validated-input"],e=d?d.call(a,i):G.call(a,"validated-input",i),(e||0===e)&&b.buffer.push(e),b.buffer.push("\n\n    "),f={label:a,value:a,valid:a,comp:a,"input-cols":a,step:a,min:a,max:a,"input-class":a},g={label:"STRING",value:"ID",valid:"ID",comp:"STRING","input-cols":"INTEGER",step:"STRING",min:"STRING",max:"ID","input-class":"STRING"},i={hash:{label:"Amount",value:"amountBTC",valid:"validAmount",comp:"number","input-cols":2,step:"0.1",min:"0",max:"source.balanceBTC","input-class":"form-control"},inverse:H.noop,fn:H.program(9,k,b),contexts:[],types:[],hashContexts:f,hashTypes:g,data:b},d=c["validated-input"]||a["validated-input"],e=d?d.call(a,i):G.call(a,"validated-input",i),(e||0===e)&&b.buffer.push(e),b.buffer.push('\n\n    <div class="form-group">\n      <label class="col-lg-2 control-label">+ fees</label>\n      <div class="col-lg-10">\n        <div class="col-lg-7">\n          <p class="form-control-static">\n            '),g={},f={},i={hash:{},contexts:[a],types:["ID"],hashContexts:f,hashTypes:g,data:b},b.buffer.push(F((d=c.btcValue||a.btcValue,d?d.call(a,"fee",i):G.call(a,"btcValue","fee",i)))),b.buffer.push(" BTC sending fee + "),g={},f={},i={hash:{},contexts:[a],types:["ID"],hashContexts:f,hashTypes:g,data:b},b.buffer.push(F((d=c.btcValue||a.btcValue,d?d.call(a,"fee",i):G.call(a,"btcValue","fee",i)))),b.buffer.push(' BTC redemption fee.\n            <a href="#" '),g={},f={},b.buffer.push(F(c.action.call(a,"openModal","help/why-fee",{hash:{},contexts:[a,a],types:["STRING","STRING"],hashContexts:f,hashTypes:g,data:b}))),b.buffer.push('>Why the fees?</a>\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label class="col-lg-2 control-label">Total</label>\n      <div class="col-lg-10">\n        <div class="col-lg-7">\n          <p class="form-control-static"><b>'),g={},f={},i={hash:{},contexts:[a],types:["ID"],hashContexts:f,hashTypes:g,data:b},b.buffer.push(F((d=c.btcValue||a.btcValue,d?d.call(a,"totalAmount",i):G.call(a,"btcValue","totalAmount",i)))),b.buffer.push(" BTC</b></p>\n\n          "),g={},f={},e=c.unless.call(a,"enoughMoney",{hash:{},inverse:H.noop,fn:H.program(13,n,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:g,data:b}),(e||0===e)&&b.buffer.push(e),b.buffer.push("\n        </div>\n      </div>\n    </div>\n\n    "),f={label:a,value:a,valid:a,placeholder:a,maxlength:a,"input-class":a},g={label:"STRING",value:"ID",valid:"ID",placeholder:"STRING",maxlength:"INTEGER","input-class":"STRING"},i={hash:{label:"Receiver PK/address",value:"receiver.pubKeyOrAddress",valid:"receiver.validParty",placeholder:"Receiver public key or address",maxlength:130,"input-class":"form-control"},inverse:H.noop,fn:H.program(15,o,b),contexts:[],types:[],hashContexts:f,hashTypes:g,data:b},d=c["validated-input"]||a["validated-input"],e=d?d.call(a,i):G.call(a,"validated-input",i),(e||0===e)&&b.buffer.push(e),b.buffer.push("\n\n    "),f={label:a,value:a,valid:a,placeholder:a,maxlength:a,"input-class":a},g={label:"STRING",value:"ID",valid:"ID",placeholder:"STRING",maxlength:"INTEGER","input-class":"STRING"},i={hash:{label:"Mediator PK/address",value:"mediator.pubKeyOrAddress",valid:"mediator.validParty",placeholder:"Mediator public key or address",maxlength:130,"input-class":"form-control"},inverse:H.noop,fn:H.program(24,u,b),contexts:[],types:[],hashContexts:f,hashTypes:g,data:b},d=c["validated-input"]||a["validated-input"],e=d?d.call(a,i):G.call(a,"validated-input",i),(e||0===e)&&b.buffer.push(e),b.buffer.push('\n\n    <div class="form-group">\n      <div class="col-lg-offset-2 col-lg-10">\n        <div class="col-lg-7">\n          <a href="#" '),f={"class":a},g={"class":"STRING"},i={hash:{"class":"sendDisabled:disabled :btn :btn-primary"},contexts:[],types:[],hashContexts:f,hashTypes:g,data:b},b.buffer.push(F((d=c["bind-attr"]||a["bind-attr"],d?d.call(a,i):G.call(a,"bind-attr",i)))),b.buffer.push(" "),g={},f={},b.buffer.push(F(c.action.call(a,"sendTx",{hash:{},contexts:[a],types:["STRING"],hashContexts:f,hashTypes:g,data:b}))),b.buffer.push(">\n            "),g={},f={},e=c["if"].call(a,"sendingTx",{hash:{},inverse:H.program(32,z,b),fn:H.program(30,y,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:g,data:b}),(e||0===e)&&b.buffer.push(e),b.buffer.push("\n          </a>\n\n          "),g={},f={},e=c["if"].call(a,"error",{hash:{},inverse:H.noop,fn:H.program(34,A,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:g,data:b}),(e||0===e)&&b.buffer.push(e),b.buffer.push("\n        </div>\n      </div>\n    </div>\n  </form>\n"),j
}function h(a,b){var d,e,f,g="";return b.buffer.push('\n      <span class="help-block"><a href="#" '),e={},f={},b.buffer.push(F(c.action.call(a,"openModal","help/private-key",{hash:{},contexts:[a,a],types:["STRING","STRING"],hashContexts:f,hashTypes:e,data:b}))),b.buffer.push(">Why is it needed and where can I find it?</a></span>\n\n      "),e={},f={},d=c["if"].call(a,"view.valid",{hash:{},inverse:H.noop,fn:H.program(5,i,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n\n      "),e={},f={},d=c["if"].call(a,"view.focusedInvalid",{hash:{},inverse:H.noop,fn:H.program(7,j,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n    "),g}function i(a,b){var d,e,f,g,h="";return b.buffer.push('\n        <span class="help-block">\n          Source: <b>'),e={},f={},b.buffer.push(F(c._triageMustache.call(a,"source.address",{hash:{},contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}))),b.buffer.push("</b> ("),e={},f={},g={hash:{},contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b},b.buffer.push(F((d=c.btcValue||a.btcValue,d?d.call(a,"source.balance",g):G.call(a,"btcValue","source.balance",g)))),b.buffer.push(" BTC)\n        </span>\n      "),h}function j(a,b){b.buffer.push('\n        <span class="has-error">\n          <span class="help-block">\n            Invalid private key.\n          </span>\n        </span>\n      ')}function k(a,b){var d,e,f,g="";return b.buffer.push("\n      "),e={},f={},d=c["if"].call(a,"view.focusedInvalid",{hash:{},inverse:H.noop,fn:H.program(10,l,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n    "),g}function l(a,b){var d,e,f,g="";return b.buffer.push('\n        <span class="has-error">\n          <span class="help-block">\n            '),e={},f={},d=c.unless.call(a,"moreThanMin",{hash:{},inverse:H.noop,fn:H.program(11,m,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n          </span>\n        </span>\n      "),g}function m(a,b){b.buffer.push("Should be at least 0.01 BTC.")}function n(a,b){b.buffer.push('\n            <span class="has-error">\n              <span class="help-block">\n                Not enough money.\n              </span>\n            </span>\n          ')}function o(a,b){var d,e,f,g="";return b.buffer.push('\n      <span class="help-block"><a href="#" '),e={},f={},b.buffer.push(F(c.action.call(a,"openModal","help/public-key",{hash:{},contexts:[a,a],types:["STRING","STRING"],hashContexts:f,hashTypes:e,data:b}))),b.buffer.push(">Why is it needed and where can I find it?</a></span>\n\n      "),e={},f={},d=c["if"].call(a,"view.valid",{hash:{},inverse:H.noop,fn:H.program(16,p,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n\n      "),e={},f={},d=c["if"].call(a,"view.focusedInvalid",{hash:{},inverse:H.noop,fn:H.program(19,r,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n    "),g}function p(a,b){var d,e,f,g="";return b.buffer.push("\n        "),e={},f={},d=c["if"].call(a,"receiver.pkoaPubKey",{hash:{},inverse:H.noop,fn:H.program(17,q,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n      "),g}function q(a,b){var d,e,f="";return b.buffer.push('\n          <span class="help-block">Address: <b>'),d={},e={},b.buffer.push(F(c._triageMustache.call(a,"receiver.address",{hash:{},contexts:[a],types:["ID"],hashContexts:e,hashTypes:d,data:b}))),b.buffer.push("</b></span>\n        "),f}function r(a,b){var d,e,f,g="";return b.buffer.push('\n        <span class="has-error">\n          <span class="help-block">\n            '),e={},f={},d=c["if"].call(a,"receiver.addrNoPub",{hash:{},inverse:H.noop,fn:H.program(20,s,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n\n            "),e={},f={},d=c["if"].call(a,"receiver.noAddrNoPub",{hash:{},inverse:H.noop,fn:H.program(22,t,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n          </span>\n        </span>\n      "),g}function s(a,b){b.buffer.push("\n              Public key for this address could not be found.\n              Please, use public key instead.\n            ")}function t(a,b){b.buffer.push("Invalid address/public key.")}function u(a,b){var d,e,f,g="";return b.buffer.push('\n      <span class="help-block"><a href="#" '),e={},f={},b.buffer.push(F(c.action.call(a,"openModal","help/public-key",{hash:{},contexts:[a,a],types:["STRING","STRING"],hashContexts:f,hashTypes:e,data:b}))),b.buffer.push(">Why is it needed and where can I find it?</a></span>\n\n      "),e={},f={},d=c["if"].call(a,"view.valid",{hash:{},inverse:H.noop,fn:H.program(25,v,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n\n      "),e={},f={},d=c["if"].call(a,"view.focusedInvalid",{hash:{},inverse:H.noop,fn:H.program(28,x,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n    "),g}function v(a,b){var d,e,f,g="";return b.buffer.push("\n        "),e={},f={},d=c["if"].call(a,"mediator.pkoaPubKey",{hash:{},inverse:H.noop,fn:H.program(26,w,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n      "),g}function w(a,b){var d,e,f="";return b.buffer.push('\n          <span class="help-block">Address: <b>'),d={},e={},b.buffer.push(F(c._triageMustache.call(a,"mediator.address",{hash:{},contexts:[a],types:["ID"],hashContexts:e,hashTypes:d,data:b}))),b.buffer.push("</b></span>\n        "),f}function x(a,b){var d,e,f,g="";return b.buffer.push('\n        <span class="has-error">\n          <span class="help-block">\n            '),e={},f={},d=c["if"].call(a,"mediator.addrNoPub",{hash:{},inverse:H.noop,fn:H.program(20,s,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n\n            "),e={},f={},d=c["if"].call(a,"mediator.noAddrNoPub",{hash:{},inverse:H.noop,fn:H.program(22,t,b),contexts:[a],types:["ID"],hashContexts:f,hashTypes:e,data:b}),(d||0===d)&&b.buffer.push(d),b.buffer.push("\n          </span>\n        </span>\n      "),g}function y(a,b){b.buffer.push("Sending transaction...")}function z(a,b){b.buffer.push("Send transaction")}function A(a,b){var d,e,f="";return b.buffer.push("<b>Error sending transaction: "),d={},e={},b.buffer.push(F(c._triageMustache.call(a,"error",{hash:{},contexts:[a],types:["ID"],hashContexts:e,hashTypes:d,data:b}))),b.buffer.push("</b>"),f}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var B,C,D,E="",F=this.escapeExpression,G=c.helperMissing,H=this;return e.buffer.push("<h2>Send the coins to escrow</h2>\n\n"),C={},D={},B=c["if"].call(b,"pushSuccess",{hash:{},inverse:H.program(3,g,e),fn:H.program(1,f,e),contexts:[b],types:["ID"],hashContexts:D,hashTypes:C,data:e}),(B||0===B)&&e.buffer.push(B),e.buffer.push("\n"),E})});